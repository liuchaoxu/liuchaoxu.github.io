import{_ as t,c as s,o as e,a4 as a}from"./chunks/framework.CpNIRa07.js";const m=JSON.parse('{"title":"git stash","description":"","frontmatter":{},"headers":[],"relativePath":"docs/Git/GitUse.md","filePath":"docs/Git/GitUse.md","lastUpdated":1719754519000}'),o={name:"docs/Git/GitUse.md"},c=a('<h1 id="git-stash" tabindex="-1">git stash <a class="header-anchor" href="#git-stash" aria-label="Permalink to &quot;git stash&quot;">​</a></h1><p>常用<code>git stash</code>命令：</p><p><code>git stash</code>: 备份当前的工作区的内容，从最近的一次提交中读取相关内容，让工作区保证和上次提交的内容一致。同时，将当前的工作区内容保存到Git栈中。</p><p><code>git stash save ‘message’</code>：备份工作区内容，同时添加备注信息。</p><p><code>git stash save -a “messeag” </code>：没有加 -a 这个option选项，代码开发可能是在原代码上进行修改的。而对于在项目里加入了代码新文件的开发来说，-a选项才会将新加入的代码文件同时放入暂存区。</p><p><code>git stash apply</code>: 从Git栈中读取最近一次保存的内容，恢复工作区的相关内容。但是不会将该stash记录删除</p><p><code>git stash drop</code>: 把最近的一条stash记录删除。</p><p><code>git stash pop</code>: 从Git栈中读取最近一次保存的内容，恢复工作区的相关内容。由于可能存在多个Stash的内容，所以用栈来管理，pop会从最近的一个stash中读取内容并恢复，同时会删除这条stash记录，相当于<code>git stash apply</code>和<code>git stash drop</code>一起执行了。</p><p><code>git stash list</code>: 显示Git栈内的所有备份，可以利用这个列表来决定从那个地方恢复。</p><p><code>git stash clear</code>: 清空Git栈，原来存储的所以stash的节点都消失了。</p>',10),i=[c];function d(p,h,r,_,n,g){return e(),s("div",null,i)}const G=t(o,[["render",d]]);export{m as __pageData,G as default};
